##  -*- mode: makefile -*-

DESTDIR?=$(CURDIR)
O=$(DESTDIR)/output


board := $(BOARD)
arch ?= kv3-1

BIN2H:=$(abspath ../bin2h_v2.py)
GENERATED:=$(abspath $(DESTDIR)/generated)

KVX_JTAG_RUNNER := kvx-jtag-runner
KVX_JTAG_RUNNER_ARGS := --timeout=600

KVX_MPPA := kvx-mppa
KVX_MPPA_ARGS := --march=$(arch) --no-trap

-include Makefile.arch.$(arch)

MAIN_LDFLAGS := $(SPEC_LDFLAGS) -Wl,-E -Wl,--dynamic-list-data -lmppadl -lsomppadl -lelf
MAIN_CFLAGS := -I$(GENERATED) $(SPEC_CFLAGS) -g -O0

MPPADL_INCLUDE_PATH ?= $(abspath $(CURDIR)/../../include/)

kvx-cflags := -I $(MPPADL_INCLUDE_PATH) -Wall -Werror $(SPEC_CFLAGS) -save-temps=obj
kvx-lflags := $(SPEC_LDFLAGS)


default : all

clean : clean-generated

clean-generated :
	rm -rf $(GENERATED)

define mdo_rules
$(GENERATED)/$(1)_hex.c : $(BIN_DIR)/$(1)_mdo
	mkdir -p $(GENERATED)
	$(BIN2H) $$< $$(notdir $$<) > $$@

$(GENERATED)/$(1)_hex.h : $(BIN_DIR)/$(1)_mdo
	mkdir -p $(GENERATED)
	$(BIN2H) $$< $$(notdir $$<) > $$@
endef

define test_rule
# only works on developer or explorer

test: $$(BIN_DIR)/main

ifneq (,$$(filter $(EXECUTION_PLATFORM)-$(BOARD),hw-csp_generic))
	../run_test.sh "$(GENERATED)/test.log" "$(GENERATED)" golden "$$<" $(KVX_JTAG_RUNNER) $(KVX_JTAG_RUNNER_ARGS) --exec-file=Cluster0:$$<
else ifneq (,$$(filter $(EXECUTION_PLATFORM)-$(BOARD),hw-coolisaurus))
	../run_test.sh "$(GENERATED)/test.log" "$(GENERATED)" golden "$$<" $(KVX_JTAG_RUNNER) $(KVX_JTAG_RUNNER_ARGS) --exec-file=Cluster0:$$<
else ifneq (,$$(filter $(EXECUTION_PLATFORM)-$(BOARD),sim-csp_generic))
	../run_test.sh "$(GENERATED)/test.log" "$(GENERATED)" golden "$$<" $(KVX_MPPA) $(KVX_MPPA_ARGS) -- $$<
else
        $$(info Error, unknown board: $(EXECUTION_PLATFORM) on board $(BOARD))
	false
endif
	if [[ -x ./test.sh ]]; then ./test.sh $$<; fi
endef
